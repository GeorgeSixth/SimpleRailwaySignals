name: Test Report

on:
  push:
    branches: [ main, feature-** ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install GCC 13
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y gcc-13 g++-13

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan==2.8.0

    - name: Configure Conan
      run: |
        conan profile detect --force
        cat > ~/.conan2/profiles/default << EOF
        [settings]
        arch=x86_64
        build_type=Release
        compiler=gcc
        compiler.cppstd=gnu23
        compiler.libcxx=libstdc++11
        compiler.version=13
        os=Linux
        [conf]
        tools.build:compiler_executables={"c": "gcc-13", "cpp": "g++-13"}
        EOF

    - name: Configure and Build
      run: |
        mkdir build && cd build
        conan install .. --build=missing
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER=gcc-13 \
          -DCMAKE_CXX_COMPILER=g++-13
        cmake --build .

    - name: Run Tests
      run: |
        cd build
        mkdir -p test-results
        ./railway_signaling_test --gtest_output="xml:./test-results/test_report.xml"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Railway Signal Tests
        path: build/test-results/test_report.xml
        reporter: java-junit        # Format du rapport
        fail-on-error: true        # Échoue le workflow si des tests échouent
